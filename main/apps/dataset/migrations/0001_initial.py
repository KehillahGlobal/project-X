# Generated by Django 4.2.3 on 2023-09-04 23:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField()),
                ("date_created", models.DateField(auto_now_add=True)),
                ("status", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("has_user_policy", models.BooleanField(default=False)),
                ("is_government", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("is_published", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("title", models.CharField(default="", max_length=100)),
                ("description", models.CharField(default="", max_length=1000)),
                ("status", models.TextField(default=None)),
                ("addt_info", models.TextField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name="Dataset_File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dataset_Metadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metadata_file", models.CharField(max_length=50, null=True)),
                (
                    "metadata_blurb",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("metadata_source_link", models.URLField()),
                ("metadata_resource_type", models.CharField(max_length=50)),
                ("publisher", models.CharField(max_length=100)),
                ("maintainer", models.CharField(max_length=100)),
                ("license_link", models.URLField()),
                ("date_created", models.DateField(auto_now_add=True)),
                ("date_modified", models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Dataset_Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("url", models.CharField(default=None, max_length=50)),
                ("status", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="dataset_likes",
                        to="dataset.dataset",
                    ),
                ),
            ],
        ),
    ]
