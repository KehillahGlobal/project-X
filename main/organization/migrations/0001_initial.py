# Generated by Django 4.2.3 on 2023-08-18 05:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dataset', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100)),
                ('location', models.CharField(default=None, max_length=100)),
                ('address', models.CharField(default=None, max_length=100)),
                ('phone_number', models.CharField(default=None, max_length=50)),
                ('email', models.EmailField(default=None, max_length=254)),
                ('password', models.CharField(default=None, max_length=50)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Organization_Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.organization')),
                ('tags', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dataset.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Organization_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='user.user')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Organization_File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dataset.file')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Organization_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.category')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Organization_Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='user.user')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organization.organization')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='admins',
            field=models.ManyToManyField(related_name='admin_organizations', through='organization.Organization_Admin', to='user.user'),
        ),
        migrations.AddField(
            model_name='organization',
            name='categories',
            field=models.ManyToManyField(through='organization.Organization_Category', to='organization.category'),
        ),
        migrations.AddField(
            model_name='organization',
            name='files',
            field=models.ManyToManyField(through='organization.Organization_File', to='dataset.file'),
        ),
        migrations.AddField(
            model_name='organization',
            name='members',
            field=models.ManyToManyField(related_name='member_organizations', through='organization.Organization_Member', to='user.user'),
        ),
        migrations.AddField(
            model_name='organization',
            name='tags',
            field=models.ManyToManyField(through='organization.Organization_Tag', to='dataset.tag'),
        ),
    ]
